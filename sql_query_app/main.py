import streamlit as st
from modules.auth import require_login, logout_button, load_session
from dotenv import load_dotenv
import os
import base64
import glob

# Charger les variables d'environnement d√®s le d√©marrage
load_dotenv()

load_session()

st.set_page_config(initial_sidebar_state="expanded", page_title="Accueil")

require_login()

role = st.session_state.get("role")

# V√©rification de la cl√© Fernet (optionnel mais utile pour le debug)
if not os.getenv("FERNET_KEY"):
    print("‚ö†Ô∏è ATTENTION: La cl√© Fernet n'est pas d√©finie dans .env")

# Construction de la sidebar conditionnelle
st.sidebar.title("Navigation")

logout_button()

st.title(" Data Extraction Portal ")
st.info(f"Bienvenue, {st.session_state.get('username', '')} (r√¥le : {role})")

st.write("""
Ce portail vous permet d'acc√©der √† l'interface correspondant √† votre r√¥le. Utilisez la barre lat√©rale pour naviguer.
""")

# Fonction pour cr√©er un lien de t√©l√©chargement
def get_binary_file_downloader_html(file_path, file_label='File'):
    try:
        with open(file_path, 'rb') as f:
            data = f.read()
        bin_str = base64.b64encode(data).decode()
        file_name = os.path.basename(file_path)
        href = f'<a href="data:application/octet-stream;base64,{bin_str}" download="{file_name}" style="background-color: #4CAF50; color: white; padding: 10px 20px; text-align: center; text-decoration: none; display: inline-block; border-radius: 5px;">üì• {file_label}</a>'
        return href
    except Exception as e:
        st.error(f"Erreur: {str(e)}")
        return None

# Section pour le t√©l√©chargement du guide administrateur - r√©serv√©e aux admins
st.header("Documentation")

# V√©rifier si l'utilisateur est Admin avant d'afficher la section de t√©l√©chargement
if role == "Admin":
    # Rechercher tous les fichiers PDF dans le r√©pertoire courant
    pdf_files = glob.glob("*.pdf")

    if pdf_files:
        # Prendre le premier fichier PDF trouv√©
        pdf_file = pdf_files[0]
        
        # Afficher le nom du fichier pour confirmation
        st.success(f"Guide trouv√©: {pdf_file}")
        
        # Cr√©er le lien de t√©l√©chargement
        download_link = get_binary_file_downloader_html(pdf_file, "T√©l√©charger le Guide Administrateur")
        
        if download_link:
            st.markdown(download_link, unsafe_allow_html=True)
    else:
        # Afficher le r√©pertoire courant et les fichiers pour le d√©bogage
        current_dir = os.getcwd()
        st.warning(f"Aucun fichier PDF trouv√© dans le r√©pertoire: {current_dir}")
        
        # Lister tous les fichiers pour aider au d√©bogage
        all_files = os.listdir()
        st.info(f"Fichiers pr√©sents: {', '.join(all_files)}")
        
    st.write("""
    Le guide administrateur contient toutes les instructions d√©taill√©es pour utiliser 
    l'application, g√©rer les utilisateurs, configurer les connexions aux bases de donn√©es,
    et ex√©cuter des requ√™tes pr√©d√©finies.
    """)
else:
    st.info("La documentation administrative est r√©serv√©e aux utilisateurs ayant le r√¥le Admin.")